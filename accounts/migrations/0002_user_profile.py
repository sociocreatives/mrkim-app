# Generated by Django 4.2.14 on 2024-08-01 15:52

import accounts.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('website', '0001_initial'),
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('email', models.EmailField(max_length=50, unique=True)),
                ('username', models.CharField(max_length=20, unique=True)),
                ('role', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Administrator'), (2, 'Corporate'), (3, 'Employer'), (4, 'Jobseeker')], null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', accounts.models.CustomeUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to='images/userprofiles')),
                ('cover_photo', models.ImageField(blank=True, null=True, upload_to='images/coverphoto')),
                ('badge', models.ImageField(blank=True, null=True, upload_to='images/badge')),
                ('applicable_skills_training', models.CharField(blank=True, choices=[('Path to Pro Skills program through TVET', 'Path to Pro Skills program through TVET'), ('Not Applicable', 'Not Applicable')], max_length=50, null=True)),
                ('location', models.CharField(max_length=50)),
                ('telephone', models.CharField(default='0700000000', max_length=50)),
                ('job_title', models.CharField(blank=True, max_length=50)),
                ('bio', models.TextField(null=True)),
                ('employment_type', models.CharField(blank=True, choices=[('Full Time', 'Full Time'), ('Part Time', 'Part Time'), ('Contractor', 'Contractor')], default='Full Time', max_length=30, null=True)),
                ('years_of_experience', models.CharField(blank=True, choices=[('Entry level 0-2 years', 'Entry level 0-2 years'), ('Intermediate 2-5 years', 'Intermediate 2-5 years'), ('Expert 5-10 years', 'Expert 5-10 years'), ('Management 10+ years', 'Management 10+ years')], default='Entry level 0-2 years', max_length=30, null=True)),
                ('availability', models.CharField(blank=True, choices=[('Available', 'Available'), ('Not Available', 'Not Available')], default='Available', max_length=30, null=True)),
                ('is_availability', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='website.category')),
                ('tvets', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.tvets')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'User Profile',
            },
        ),
    ]
